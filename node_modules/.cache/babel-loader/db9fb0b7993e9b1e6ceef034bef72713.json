{"ast":null,"code":"var _jsxFileName = \"/Users/zacharyrobin/Desktop/Code/seasons/src/SeasonDisplay.js\";\nimport React from \"react\";\nimport \"./SeasonDisplay.css\"; //season conditional render info stored in a config object\n\nconst seasonCofig = {\n  summer: {\n    text: 'Holy fuck its hot! I have swamp nuts',\n    iconName: 'sun',\n    backgroundColor: 'orange'\n  },\n  winter: {\n    text: 'Its fucking cold Randy!',\n    iconName: 'snowflake',\n    backgroundColor: 'blue'\n  } //get the season based upon user's latitude and the month \n\n};\n\nconst getSeason = (lat, month) => {\n  if (month > 2 && month < 9) {\n    return lat > 0 ? 'summer' : 'winter';\n  } else {\n    return lat > 0 ? 'winter' : 'summer';\n  }\n};\n\nconst SeasonDisplay = props => {\n  const currentMonth = new Date().getMonth();\n  const season = getSeason(props.lat, currentMonth);\n  const _seasonCofig$season = seasonCofig[season],\n        text = _seasonCofig$season.text,\n        iconName = _seasonCofig$season.iconName;\n  return React.createElement(\"div\", {\n    className: \"season-display \".concat(season),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, React.createElement(\"i\", {\n    className: \"icon-left massive \".concat(iconName, \" icon\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }), React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, text), React.createElement(\"div\", {\n    className: \"lat\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, \"Latitude: \", props.lat), React.createElement(\"div\", {\n    className: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, props.lat), React.createElement(\"i\", {\n    className: \"icon-right massive \".concat(iconName, \" icon\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }));\n};\n\nexport default SeasonDisplay;","map":{"version":3,"sources":["/Users/zacharyrobin/Desktop/Code/seasons/src/SeasonDisplay.js"],"names":["React","seasonCofig","summer","text","iconName","backgroundColor","winter","getSeason","lat","month","SeasonDisplay","props","currentMonth","Date","getMonth","season"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,qBAAP,C,CAEA;;AACA,MAAMC,WAAW,GAAC;AACdC,EAAAA,MAAM,EAAC;AACHC,IAAAA,IAAI,EAAE,sCADH;AAEHC,IAAAA,QAAQ,EAAE,KAFP;AAGHC,IAAAA,eAAe,EAAE;AAHd,GADO;AAMdC,EAAAA,MAAM,EAAE;AACJH,IAAAA,IAAI,EAAE,yBADF;AAEJC,IAAAA,QAAQ,EAAE,WAFN;AAGJC,IAAAA,eAAe,EAAE;AAHb,GANM,CAalB;;AAbkB,CAAlB;;AAcA,MAAME,SAAS,GAAC,CAACC,GAAD,EAAKC,KAAL,KAAa;AACzB,MAAGA,KAAK,GAAC,CAAN,IAAWA,KAAK,GAAC,CAApB,EAAsB;AAClB,WAAOD,GAAG,GAAG,CAAN,GAAU,QAAV,GAAqB,QAA5B;AACH,GAFD,MAGI;AACA,WAAOA,GAAG,GAAE,CAAL,GAAS,QAAT,GAAoB,QAA3B;AACH;AACJ,CAPD;;AAUA,MAAME,aAAa,GAAEC,KAAD,IAAS;AACzB,QAAMC,YAAY,GAAG,IAAIC,IAAJ,GAAWC,QAAX,EAArB;AACA,QAAMC,MAAM,GAAGR,SAAS,CAACI,KAAK,CAACH,GAAP,EAAYI,YAAZ,CAAxB;AAFyB,8BAGDX,WAAW,CAACc,MAAD,CAHV;AAAA,QAGlBZ,IAHkB,uBAGlBA,IAHkB;AAAA,QAGbC,QAHa,uBAGbA,QAHa;AAKzB,SAEI;AAAK,IAAA,SAAS,2BAAoBW,MAApB,CAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA;AAAG,IAAA,SAAS,8BAAuBX,QAAvB,UAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,EAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKD,IAAL,CAFA,EAGA;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAgCQ,KAAK,CAACH,GAAtC,CAHA,EAIA;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAsBG,KAAK,CAACH,GAA5B,CAJA,EAKA;AAAG,IAAA,SAAS,+BAAwBJ,QAAxB,UAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALA,CAFJ;AAWH,CAhBD;;AAkBA,eAAeM,aAAf","sourcesContent":["import React from \"react\"\nimport \"./SeasonDisplay.css\"\n\n//season conditional render info stored in a config object\nconst seasonCofig={\n    summer:{\n        text: 'Holy fuck its hot! I have swamp nuts',\n        iconName: 'sun',\n        backgroundColor: 'orange'\n    },\n    winter: {\n        text: 'Its fucking cold Randy!',\n        iconName: 'snowflake',\n        backgroundColor: 'blue'\n    }\n}\n\n//get the season based upon user's latitude and the month \nconst getSeason=(lat,month)=>{\n    if(month>2 && month<9){\n        return lat > 0 ? 'summer' : 'winter';\n    }\n    else{\n        return lat> 0 ? 'winter' : 'summer'; \n    }\n}\n\n\nconst SeasonDisplay=(props)=>{\n    const currentMonth = new Date().getMonth();\n    const season = getSeason(props.lat, currentMonth)\n    const {text,iconName} = seasonCofig[season]\n   \n    return(\n       \n        <div className={`season-display ${season}`}>\n        <i className={`icon-left massive ${iconName} icon`}/>\n        <h1>{text}</h1>\n        <div className=\"lat\">Latitude: {props.lat}</div>\n        <div className=\"row\">{props.lat}</div>\n        <i className={`icon-right massive ${iconName} icon`}/>\n        </div>\n        \n    )\n}\n\nexport default SeasonDisplay; "]},"metadata":{},"sourceType":"module"}